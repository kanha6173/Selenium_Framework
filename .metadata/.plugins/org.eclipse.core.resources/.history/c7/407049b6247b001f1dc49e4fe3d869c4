package KanhaFrameworkDesign.tests;

import java.io.File;
import java.io.IOException;
import java.time.Duration;
import java.util.HashMap;
import java.util.List;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.testng.Assert;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import KanhaFramework.pageObjects.CartPage;
import KanhaFramework.pageObjects.CheckOutPage;
import KanhaFramework.pageObjects.ConfirmationPage;
import KanhaFramework.pageObjects.LandingPage;
import KanhaFramework.pageObjects.OrderPage;
import KanhaFramework.pageObjects.ProductCatalogue;
import KanhaFrameworkDesign.TestComponent.BaseTest;
import io.github.bonigarcia.wdm.WebDriverManager;

public class SampleTest extends BaseTest {
	// String productName = "ZARA COAT 3";

	@Test(dataProvider = "getData", groups = { "Purchase" })
	public void submitOrder(HashMap<String, String> input) throws InterruptedException, IOException {
		// Login to the application
		ProductCatalogue pc = lp.login(input.get("email"), input.get("password"));

		// Get product list and add product to cart
		pc.addProductToCart(input.get("productName"));
		CartPage cp = pc.goToCartPage();

		// Verify the product is displayed in the cart
		Boolean match = cp.verifyProductDisplay(input.get("productName"));
		Assert.assertTrue(match);

		// Go to checkout page
		CheckOutPage checkout = cp.goTocheckOut();
		checkout.fillCreditCard();
		checkout.fillMonth();
		checkout.filldate(); // Call once
		checkout.fillCvv();
		checkout.selectCountry("India");

		// Create a WebDriverWait instance
		WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));

		// Wait for any loading spinner to disappear
		wait.until(ExpectedConditions.invisibilityOfElementLocated(By.className("ngx-spinner-overlay")));

		// Wait for the submit button to be clickable
		WebElement submitButton = wait.until(ExpectedConditions
				.elementToBeClickable(By.xpath("//a[@class='btnn action__submit ng-star-inserted']")));

		// Optionally scroll to the element
		((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView(true);", submitButton);

		// Submit the order
		ConfirmationPage confirmationPage = checkout.submitOrder();

		// Wait for the confirmation message to be visible
		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//your_confirmation_message_xpath")));
		String confirmationMessage = confirmationPage.getConfirmatonMessage();

		// Validate the confirmation message
		Assert.assertTrue(confirmationMessage.equalsIgnoreCase("THANKYOU FOR THE ORDER."));
		Thread.sleep(5000);
	}

	@Test(dependsOnMethods = { "submitOrder" }, dataProvider = "getData")
	public void orderHistory(String email, String password, String productName) {
		// Login to the application
		ProductCatalogue pc = lp.login(email, password);
		OrderPage op = pc.gotoOrdersPage();

		// Verify that the order is displayed in the order history
		Assert.assertTrue(op.verifyOrderDisplay(productName));
	}

	@DataProvider
	public Object[][] getData() throws IOException {
		// Load data from JSON file
		List<HashMap<String, String>> data = getJsonDataToMap(
				System.getProperty("user.dir") + "\\src\\test\\java\\KanhaFrameworkDesign\\data\\PurchaseOrder.json");
		return new Object[][] { { data.get(0) }, { data.get(1) } };
	}

	/*
	 * Uncomment for hardcoded data if needed HashMap<String, String> map = new
	 * HashMap<String, String>(); map.put("email", "kanhu@gmail.com");
	 * map.put("password", "Kanha@6173"); map.put("productName", "ZARA COAT 3");
	 *
	 * HashMap<String, String> map1 = new HashMap<String, String>();
	 * map1.put("email", "naa@gmail.com"); map1.put("password", "NAa@1234");
	 * map1.put("productName", "NAa@1234");
	 */
}
